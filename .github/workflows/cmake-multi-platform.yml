# .github/workflows/cmake-multi-platform.yml

name: CMake Multi-Platform Build (x86_64, armhf and arm64)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libcurl4-openssl-dev libncurses-dev libarchive-dev

      - name: Configure CMake
        run: >
          cmake -B build-x86_64
          -DCMAKE_C_COMPILER=gcc
          -DCMAKE_CXX_COMPILER=g++
          -DCMAKE_BUILD_TYPE=Release
          -S .

      - name: Build x86_64
        run: cmake --build build-x86_64 --config Release

      - name: List build output
        run: ls -lh build-x86_64

      - name: Inspect binary
        run: file build-x86_64/Chrootux

      - name: Compress x86_64 binary
        run: zip -j Chrootux-x86_64.zip build-x86_64/Chrootux

      - name: Upload x86_64 binary as artifact (ZIP)
        uses: actions/upload-artifact@v4
        with:
          name: Chrootux-x86_64
          path: Chrootux-x86_64.zip

  build-arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install ARM64 cross-toolchain and dependencies
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
                                  libcurl4-openssl-dev:arm64 \
                                  libncurses-dev:arm64 \
                                  libarchive-dev:arm64

      - name: Configure CMake for ARM64
        run: >
          cmake -B build-arm64
          -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc
          -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++
          -DCMAKE_BUILD_TYPE=Release
          -S .

      - name: Build ARM64
        run: cmake --build build-arm64 --config Release

      - name: List build output
        run: ls -lh build-arm64

      - name: Inspect binary
        run: file build-arm64/Chrootux

      - name: Compress ARM64 binary
        run: zip -j Chrootux-arm64.zip build-arm64/Chrootux

      - name: Upload ARM64 binary as artifact (ZIP)
        uses: actions/upload-artifact@v4
        with:
          name: Chrootux-arm64
          path: Chrootux-arm64.zip

  build-armhf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install ARMHF cross-toolchain and dependencies
        run: |
          sudo dpkg --add-architecture armhf
          sudo apt-get update
          sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf \
                                  libcurl4-openssl-dev:armhf \
                                  libncurses-dev:armhf \
                                  libarchive-dev:armhf

      - name: Configure CMake for ARMHF
        run: >
          cmake -B build-armhf
          -DCMAKE_C_COMPILER=arm-linux-gnueabihf-gcc
          -DCMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++
          -DCMAKE_BUILD_TYPE=Release
          -S .

      - name: Build ARMHF
        run: cmake --build build-armhf --config Release

      - name: List build output
        run: ls -lh build-armhf

      - name: Inspect binary
        run: file build-armhf/Chrootux

      - name: Compress ARMHF binary
        run: zip -j Chrootux-armhf.zip build-armhf/Chrootux

      - name: Upload ARMHF binary as artifact (ZIP)
        uses: actions/upload-artifact@v4
        with:
          name: Chrootux-armhf
          path: Chrootux-armhf.zip
