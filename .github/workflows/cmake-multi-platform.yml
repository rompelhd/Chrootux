# .github/workflows/cmake-multi-platform.yml

name: CMake Multi-Platform Build (x86_64, armhf and arm64 via QEMU)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [x86_64, arm64, armhf]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run CMake Build in Docker (cross-compilation)
        run: |
          case "${{ matrix.platform }}" in
            arm64)
              ARCH="aarch64"
              PLATFORM="linux/arm64"
              ;;
            armhf)
              ARCH="armv7"
              PLATFORM="linux/arm/v7"
              ;;
            x86_64)
              ARCH="x86_64"
              PLATFORM="linux/amd64"
              ;;
          esac

          docker run --rm --privileged \
            -v ${{ github.workspace }}:/src \
            --platform=${PLATFORM} \
            multiarch/ubuntu-debootstrap:${ARCH}-jammy \
            /bin/bash -c "
              apt-get update &&
              apt-get install -y build-essential cmake gcc g++ zip file \
                                 libcurl4-openssl-dev libncurses-dev libarchive-dev &&
              mkdir -p /src/build-${{ matrix.platform }} &&
              cd /src/build-${{ matrix.platform }} &&
              cmake -DCMAKE_BUILD_TYPE=Release .. &&
              cmake --build . --config Release &&
              zip -j /src/Chrootux-${{ matrix.platform }}.zip Chrootux
            "

      - name: Upload binary as artifact (ZIP)
        uses: actions/upload-artifact@v4
        with:
          name: Chrootux-${{ matrix.platform }}
          path: Chrootux-${{ matrix.platform }}.zip
