# .github/workflows/cmake-multi-platform.yml

name: CMake Multi-Platform Build (x86_64, armhf, arm64)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [x86_64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies in a single command
        run: |
          sudo apt-get update && sudo apt-get install -y cmake build-essential \
            gcc g++ libcurl4-openssl-dev libncurses-dev libarchive-dev zip \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf

      - name: Enable verbose logging
        run: set -x

      - name: Configure and build for ${{ matrix.platform }}
        run: |
          mkdir -p build/${{ matrix.platform }}
          cd build/${{ matrix.platform }}

          if [ "${{ matrix.platform }}" == "arm64" ]; then
            cmake -DCMAKE_C_COMPILER=/usr/bin/aarch64-linux-gnu-gcc \
                  -DCMAKE_CXX_COMPILER=/usr/bin/aarch64-linux-gnu-g++ \
                  -DCMAKE_BUILD_TYPE=Release -S ../../ -B .
          elif [ "${{ matrix.platform }}" == "armhf" ]; then
            cmake -DCMAKE_C_COMPILER=/usr/bin/arm-linux-gnueabihf-gcc \
                  -DCMAKE_CXX_COMPILER=/usr/bin/arm-linux-gnueabihf-g++ \
                  -DCMAKE_BUILD_TYPE=Release -S ../../ -B .
          else
            cmake -DCMAKE_BUILD_TYPE=Release -S ../../ -B .
          fi

          cmake --build . --config Release

      - name: Verify binary existence
        run: |
          if [ ! -f build/${{ matrix.platform }}/Chrootux ]; then
            echo "Error: Binary Chrootux not found!"
            exit 1
          fi

      - name: Fix binary permissions
        run: chmod +x build/${{ matrix.platform }}/Chrootux

      - name: Compress binary
        run: |
          zip -j Chrootux-${{ matrix.platform }}.zip build/${{ matrix.platform }}/Chrootux

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Chrootux-${{ matrix.platform }}
          path: Chrootux-${{ matrix.platform }}.zip
